{"version":3,"sources":["logo.svg","components/games/pubg/PUBG.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","styled","div","_templateObject","Row","_templateObject2","Icon","i","_templateObject3","SoloCardHeader","_templateObject4","DuoCardHeader","_templateObject5","SquadCardHeader","_templateObject6","PUBG","state","API_KEY","USER_ID","fpp_solo_stats","fpp_duo_stats","fpp_squad_stats","tpp_solo_stats","tpp_duo_stats","tpp_squad_stats","SEASON_URL","this","config","headers","Authorization","Accept","axios","get","res","TPP_Solo_Stats","getStats","data","attributes","gameModeStats","TPP_Duo_Stats","TPP_Squad_Stats","setState","FPP_Solo_Stats","FPP_Duo_Stats","FPP_Squad_Stats","stats","kdratio","kills","Number","parseFloat","losses","toPrecision","averagedamage","DamageDealt","wins","react_default","a","createElement","className","Component","Header","href","App","Header_Header","PUBG_PUBG","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fbfa159.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst Card = styled.div`\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  &:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n`;\n\nconst Row = styled.div`\n  margin-top: 1em;\n  margin-bottom: 1em;\n`;\n\nconst Icon = styled.i`\n  margin-left: 3px;\n`;\n\nconst SoloCardHeader = styled.div`\n  background-color: #e4955d;\n  color: white;\n`;\n\nconst DuoCardHeader = styled.div`\n  background-color: #48a59f;\n  color: white;\n`;\n\nconst SquadCardHeader = styled.div`\n  background-color: #6d6aaa;\n  color: white;\n`;\n\nexport default class PUBG extends Component {\n  state = {\n    API_KEY:\n      'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhMDA2NmIzMC1iMjI2LTAxMzYtNjMxYi01MTc5OWNhMWUyYWUiLCJpc3MiOiJnYW1lbG9ja2VyIiwiaWF0IjoxNTM5NTUyNzcwLCJwdWIiOiJibHVlaG9sZSIsInRpdGxlIjoicHViZyIsImFwcCI6ImRhYm9zc3NsYXllcl93In0._h8DRrOqIWpewQ_cWlwzyIKEkUum6ZsljordCEuHzQU',\n    USER_ID: 'account.0fa55cf9d93449968b5a065a29417e72',\n\n    fpp_solo_stats: {},\n    fpp_duo_stats: {},\n    fpp_squad_stats: {},\n    tpp_solo_stats: {},\n    tpp_duo_stats: {},\n    tpp_squad_stats: {}\n  };\n\n  async componentDidMount() {\n    const SEASON_URL = `https://api.pubg.com/shards/steam/players/${\n      this.state.USER_ID\n    }/seasons/division.bro.official.pc-2018-01`;\n    var config = {\n      headers: {\n        Authorization: 'Bearer ' + this.state.API_KEY,\n        Accept: 'application/vnd.api+json'\n      }\n    };\n\n    const res = await axios.get(SEASON_URL, config);\n\n    // TPP\n    const TPP_Solo_Stats = this.getStats(\n      res.data.data.attributes.gameModeStats['solo']\n    );\n\n    const TPP_Duo_Stats = this.getStats(\n      res.data.data.attributes.gameModeStats['duo']\n    );\n\n    const TPP_Squad_Stats = this.getStats(\n      res.data.data.attributes.gameModeStats['squad']\n    );\n\n    this.setState({ tpp_solo_stats: TPP_Solo_Stats });\n    this.setState({ tpp_duo_stats: TPP_Duo_Stats });\n    this.setState({ tpp_squad_stats: TPP_Squad_Stats });\n\n    // FPP\n    const FPP_Solo_Stats = this.getStats(\n      res.data.data.attributes.gameModeStats['solo-fpp']\n    );\n\n    const FPP_Duo_Stats = this.getStats(\n      res.data.data.attributes.gameModeStats['duo-fpp']\n    );\n\n    const FPP_Squad_Stats = this.getStats(\n      res.data.data.attributes.gameModeStats['squad-fpp']\n    );\n\n    this.setState({ fpp_solo_stats: FPP_Solo_Stats });\n    this.setState({ fpp_duo_stats: FPP_Duo_Stats });\n    this.setState({ fpp_squad_stats: FPP_Squad_Stats });\n  }\n\n  getStats(stats) {\n    const kdratio = stats.kills\n      ? Number.parseFloat(stats.kills / stats.losses).toPrecision(2)\n      : 0;\n\n    const averagedamage = stats.losses\n      ? Number.parseFloat(\n          stats.DamageDealt / (stats.losses + stats.wins)\n        ).toPrecision(2)\n      : 0;\n\n    return {\n      kdratio: kdratio,\n      averagedamage: averagedamage\n    };\n  }\n\n  render() {\n    return (\n      <Card className=\"card p-2\">\n        <h1>Player Unknown Battle Grounds</h1>\n\n        <div className=\"container-fluid\">\n          <Row className=\"row \">\n            <div className=\"col-12\">\n              <h5>Third Person</h5>\n            </div>\n            <div className=\"col-4 \">\n              <div className=\"card\">\n                <SoloCardHeader>\n                  Solo\n                  <Icon className=\"fas fa-male\" />\n                </SoloCardHeader>\n\n                <div>KD Ratio: {this.state.tpp_solo_stats.kdratio}</div>\n              </div>\n            </div>\n            <div className=\"col-4 \">\n              <div className=\"card\">\n                <DuoCardHeader>\n                  Duo <Icon className=\"fas fa-male\" />\n                  <Icon className=\"fas fa-male\" />\n                </DuoCardHeader>\n                <div>KD Ratio: {this.state.tpp_duo_stats.kdratio}</div>\n              </div>\n            </div>\n            <div className=\"col-4 \">\n              <div className=\"card\">\n                <SquadCardHeader>\n                  Squad <Icon className=\"fas fa-male\" />\n                  <Icon className=\"fas fa-male\" />\n                  <Icon className=\"fas fa-male\" />\n                  <Icon className=\"fas fa-male\" />\n                </SquadCardHeader>\n                <div>KD Ratio: {this.state.tpp_squad_stats.kdratio}</div>\n                <div />\n              </div>\n            </div>\n          </Row>\n          <Row className=\"row\">\n            <div className=\"col-12\">\n              <h5>First Person</h5>\n            </div>\n            <div className=\"col-4 \">\n              <div className=\"card\">\n                <SoloCardHeader>\n                  Solo\n                  <Icon className=\"fas fa-male\" />\n                </SoloCardHeader>\n                <div>KD Ratio: {this.state.fpp_solo_stats.kdratio}</div>\n              </div>\n            </div>\n            <div className=\"col-4 \">\n              <div className=\"card\">\n                <DuoCardHeader>\n                  Duo <Icon className=\"fas fa-male\" />\n                  <Icon className=\"fas fa-male\" />\n                </DuoCardHeader>\n\n                <div>KD Ratio: {this.state.fpp_duo_stats.kdratio}</div>\n              </div>\n            </div>\n            <div className=\"col-4 \">\n              <div className=\"card\">\n                <SquadCardHeader>\n                  Squad <Icon className=\"fas fa-male\" />\n                  <Icon className=\"fas fa-male\" />\n                  <Icon className=\"fas fa-male\" />\n                  <Icon className=\"fas fa-male\" />\n                </SquadCardHeader>\n                <div>KD Ratio: {this.state.fpp_squad_stats.kdratio}</div>\n                <div>\n                  Average Damage: {this.state.fpp_squad_stats.averagedamage}\n                </div>\n              </div>\n            </div>\n          </Row>\n        </div>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark p-0\">\n        <a\n          href=\"#\"\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0 align-items-center\"\n        >\n          DaBossSlayer\n        </a>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport PUBG from './components/games/pubg/PUBG';\n\nimport Header from './components/layout/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container-fluid\">\n          <PUBG />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}