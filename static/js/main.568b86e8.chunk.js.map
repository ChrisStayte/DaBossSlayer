{"version":3,"sources":["logo.svg","components/games/pubg/StatCard.js","components/games/pubg/PUBG.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StatCardStyle","styled","div","_templateObject","CardHeader","_templateObject2","Icon","i","_templateObject3","StatCard","state","showInfo","_this$props","this","props","stats","title","wins","losses","kdratio","kills","Number","parseFloat","toPrecision","averagedamage","Math","round","damageDealt","longestkill","longestKill","toFixed","gamesplayed","headshotKills","mostKills","roundMostKills","heals","walkDistance","react_default","a","createElement","className","style","toLowerCase","backgroundColor","Fragment","concat","Component","Title","h1","PUBG_templateObject","Card","PUBG_templateObject2","Row","PUBG_templateObject3","PUBG","API_KEY","USER_ID","solo","duo","squad","soloFpp","duoFpp","squadFpp","SEASON_URL","config","headers","Authorization","Accept","axios","get","res","setState","data","attributes","gameModeStats","StatCard_StatCard","Header","href","App","Header_Header","PUBG_PUBG","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.568b86e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StatCardStyle = styled.div`\n  margin-bottom: 1em;\n`;\n\nconst CardHeader = styled.div`\n  margin-bottom: 0.5em;\n  color: white;\n`;\n\nconst Icon = styled.i`\n  margin-left: 3px;\n`;\n\nexport default class StatCard extends Component {\n  state = {\n    showInfo: true\n  };\n\n  render() {\n    const { stats, title } = this.props;\n\n    // Show Info\n\n    this.state = {\n      showInfo: stats.wins > 0 || stats.losses > 0 ? true : false\n    };\n\n    // Kill Death Ratio\n    const kdratio = stats.kills\n      ? Number.parseFloat(stats.kills / stats.losses).toPrecision(2)\n      : 0;\n\n    // Average Damage\n    const averagedamage = stats.losses\n      ? Math.round(stats.damageDealt / (stats.losses + stats.wins))\n      : 0;\n\n    // Longest Kill\n    const longestkill = stats.longestKill\n      ? Number.parseFloat(stats.longestKill).toFixed(1)\n      : 0;\n\n    // Games Played\n    const gamesplayed = stats.wins + stats.losses;\n\n    // Headshot Kills\n    const headshotKills = stats.headshotKills;\n\n    // Most Kills\n    const mostKills = stats.roundMostKills;\n\n    // Heals\n    const heals = stats.heals;\n\n    // Distance Walked\n    const walkDistance = Number.parseFloat(stats.walkDistance).toFixed(1);\n\n    return (\n      <StatCardStyle>\n        <div className=\"card\">\n          <CardHeader\n            style={(() => {\n              switch (title.toLowerCase()) {\n                case 'solo' || 'solo-fpp':\n                  return { backgroundColor: '#E4955D' };\n                case 'duo' || 'duo-fpp':\n                  return { backgroundColor: '#48A59F' };\n                case 'squad' || 'squad-fpp':\n                  return { backgroundColor: '#6D6AAA' };\n                default:\n                  return { backgroundColor: '#0C1010' };\n              }\n            })()}\n          >\n            <div className=\"row\">\n              <div className=\"col-5\">\n                {(() => {\n                  switch (title.toLowerCase()) {\n                    case 'solo' || 'solo-fpp':\n                      return (\n                        <React.Fragment>\n                          Solo\n                          <Icon className=\"fa fa-male\" />\n                        </React.Fragment>\n                      );\n                    case 'duo' || 'duo-fpp':\n                      return (\n                        <React.Fragment>\n                          Duo\n                          <Icon className=\"fa fa-male\" />\n                          <Icon className=\"fa fa-female\" />\n                        </React.Fragment>\n                      );\n                    case 'squad' || 'squad-fpp':\n                      return (\n                        <React.Fragment>\n                          Squad\n                          <Icon className=\"fa fa-male\" />\n                          <Icon className=\"fa fa-female\" />\n                          <Icon className=\"fa fa-male\" />\n                          <Icon className=\"fa fa-female\" />\n                        </React.Fragment>\n                      );\n                    default:\n                      return '';\n                  }\n                })()}\n              </div>\n              <div className=\"col-7\">\n                {this.state.showInfo ? `Games Played: ${gamesplayed}` : ''}\n              </div>\n            </div>\n          </CardHeader>\n          {this.state.showInfo ? (\n            <React.Fragment>\n              <div className=\"row\">\n                <div className=\"col-7\">K/D Ratio: </div>\n                <div className=\"col-5\">{kdratio}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Average Damage: </div>\n                <div className=\"col-5\">{averagedamage}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Longest Kill: </div>\n                <div className=\"col-5\">{longestkill}m</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Headshot Kills: </div>\n                <div className=\"col-5\">{headshotKills}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Round Most Kills: </div>\n                <div className=\"col-5\">{mostKills}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Heals: </div>\n                <div className=\"col-5\">{heals}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Distance Walked: </div>\n                <div className=\"col-5\">{walkDistance}m</div>\n              </div>\n            </React.Fragment>\n          ) : (\n            <h4>No Games Played</h4>\n          )}\n        </div>\n      </StatCardStyle>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport StatCard from './StatCard';\n\nconst Title = styled.h1`\n  margin-top: 0.5em;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  &:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n  margin-bottom: 3em;\n`;\n\nconst Row = styled.div`\n  margin-top: 1em;\n  margin-bottom: 1em;\n`;\n\nexport default class PUBG extends Component {\n  state = {\n    API_KEY:\n      'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhMDA2NmIzMC1iMjI2LTAxMzYtNjMxYi01MTc5OWNhMWUyYWUiLCJpc3MiOiJnYW1lbG9ja2VyIiwiaWF0IjoxNTM5NTUyNzcwLCJwdWIiOiJibHVlaG9sZSIsInRpdGxlIjoicHViZyIsImFwcCI6ImRhYm9zc3NsYXllcl93In0._h8DRrOqIWpewQ_cWlwzyIKEkUum6ZsljordCEuHzQU',\n    USER_ID: 'account.0fa55cf9d93449968b5a065a29417e72',\n    solo: {},\n    duo: {},\n    squad: {},\n    soloFpp: {},\n    duoFpp: {},\n    squadFpp: {}\n  };\n\n  async componentDidMount() {\n    const SEASON_URL = `https://api.pubg.com/shards/steam/players/${\n      this.state.USER_ID\n    }/seasons/division.bro.official.pc-2018-01`;\n    var config = {\n      headers: {\n        Authorization: 'Bearer ' + this.state.API_KEY,\n        Accept: 'application/vnd.api+json'\n      }\n    };\n\n    const res = await axios.get(SEASON_URL, config);\n\n    // TPP\n    this.setState({\n      solo: res.data.data.attributes.gameModeStats['solo'],\n      duo: res.data.data.attributes.gameModeStats['duo'],\n      squad: res.data.data.attributes.gameModeStats['squad'],\n      soloFpp: res.data.data.attributes.gameModeStats['solo-fpp'],\n      duoFpp: res.data.data.attributes.gameModeStats['duo-fpp'],\n      squadFpp: res.data.data.attributes.gameModeStats['squad-fpp']\n    });\n  }\n\n  render() {\n    return (\n      <Card className=\"card p-1\">\n        <Title>Player Unknown Battle Grounds</Title>\n        <div className=\"container-fluid\">\n          <Row className=\"row \">\n            <div className=\"col-12\">\n              <h5>\n                <span className=\"badge badge-secondary\">Third Person</span>\n              </h5>\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.solo} title=\"Solo\" />\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.duo} title=\"Duo\" />\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.squad} title=\"Squad\" />\n            </div>\n          </Row>\n          <Row className=\"row\">\n            <div className=\"col-12\">\n              <h5>\n                <span className=\"badge badge-secondary\">First Person</span>\n              </h5>\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.soloFpp} title=\"Solo\" />\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.duoFpp} title=\"Duo\" />\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.squadFpp} title=\"Squad\" />\n            </div>\n          </Row>\n        </div>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark p-0\">\n        <a\n          href=\"#\"\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0 align-items-center\"\n        >\n          DaBossSlayer\n        </a>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport PUBG from './components/games/pubg/PUBG';\nimport Header from './components/layout/Header';\nimport StatCard from './components/games/pubg/StatCard';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container-fluid\">\n          <PUBG />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}