{"version":3,"sources":["logo.svg","components/games/pubg/StatCard.js","components/games/pubg/PUBG.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StatCardStyle","styled","div","_templateObject","CardHeader","_templateObject2","Icon","i","_templateObject3","StatCard","state","showInfo","_this$props","this","props","stats","title","roundsPlayed","assists","averagedamage","losses","Math","round","damageDealt","wins","boosts","bestRankPoint","headshotKills","heals","kills","kdratio","Number","parseFloat","toPrecision","longestkill","longestKill","toFixed","longestTimeSurvived","rankPoints","revives","rideDistance","roadKills","roundMostKills","suicides","swimDistance","teamKills","top10","top10s","vehicleDestroys","walkDistance","weaponsAcquired","react_default","a","createElement","className","style","toLowerCase","backgroundColor","Fragment","concat","Component","Title","h1","PUBG_templateObject","Card","PUBG_templateObject2","Row","PUBG_templateObject3","PUBG","API_KEY","USER_ID","solo","duo","squad","soloFpp","duoFpp","squadFpp","Status","SEASON_URL","config","headers","Authorization","Accept","axios","get","then","res","_this2","setState","data","attributes","gameModeStats","catch","e","error","response","status","class","role","StatCard_StatCard","Header","href","App","Header_Header","PUBG_PUBG","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcc4dbfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StatCardStyle = styled.div`\n  margin-bottom: 1em;\n`;\n\nconst CardHeader = styled.div`\n  margin-bottom: 0.5em;\n  color: white;\n`;\n\nconst Icon = styled.i`\n  margin-left: 3px;\n`;\n\nexport default class StatCard extends Component {\n  state = {\n    showInfo: true\n  };\n\n  render() {\n    const { stats, title } = this.props;\n\n    // Show Info\n    this.state = {\n      showInfo: stats.roundsPlayed > 0 ? true : false\n    };\n\n    // Assits\n    const assists = stats.assists;\n\n    // Average Damage\n    const averagedamage = stats.losses\n      ? Math.round(stats.damageDealt / (stats.losses + stats.wins))\n      : 0;\n\n    // Best Rank Point\n    const bestRankPoint = stats.bestRankPoint;\n\n    // Boosts\n    const boosts = stats.boosts;\n\n    // Headshot Kills\n    const headshotKills = stats.headshotKills;\n\n    // Heals\n    const heals = stats.heals;\n\n    // Kills\n    const kills = stats.kills;\n\n    // Kill Death Ratio\n    const kdratio = stats.kills\n      ? Number.parseFloat(stats.kills / stats.losses).toPrecision(2)\n      : 0;\n\n    // Longest Kill\n    const longestkill = stats.longestKill\n      ? Number.parseFloat(stats.longestKill).toFixed(1)\n      : 0;\n\n    // Longest Time Survived\n    const longestTimeSurvived = stats.rankPoints\n      ? Number.parseFloat(stats.rankPoints / 60).toFixed(0)\n      : 0;\n\n    // Losses\n    const losses = stats.losses;\n\n    // Rank Points\n    const rankPoints = stats.rankPoints\n      ? Number.parseFloat(stats.rankPoints).toFixed(0)\n      : 0;\n\n    // Revives\n    const revives = stats.revives;\n\n    // Ride Distance\n    const rideDistance = stats.rideDistance;\n\n    // Road Kills\n    const roadKills = stats.roadKills;\n\n    // Round Most Kills\n    const roundMostKills = stats.roundMostKills;\n\n    // Rounds Played\n    const roundsPlayed = stats.roundsPlayed;\n\n    // Suicides\n    const suicides = stats.suicides;\n\n    // Swim Distance\n    const swimDistance = stats.swimDistance\n      ? Number.parseFloat(stats.swimDistance).toFixed(1)\n      : 0;\n\n    // Team Kills\n    const teamKills = stats.teamKills;\n\n    // Top 10\n    const top10 = stats.top10s;\n\n    // Vehicle Destroys\n    const vehicleDestroys = stats.vehicleDestroys;\n\n    // Walking Distance\n    const walkDistance = stats.walkDistance\n      ? Number.parseFloat(stats.walkDistance).toFixed(1)\n      : 0;\n\n    // Weapons Acquired\n    const weaponsAcquired = stats.weaponsAcquired;\n\n    // Wins\n    const wins = stats.wins;\n\n    return (\n      <StatCardStyle>\n        <div className=\"card\">\n          <CardHeader\n            style={(() => {\n              switch (title.toLowerCase()) {\n                case 'solo' || 'solo-fpp':\n                  return { backgroundColor: '#E4955D' };\n                case 'duo' || 'duo-fpp':\n                  return { backgroundColor: '#48A59F' };\n                case 'squad' || 'squad-fpp':\n                  return { backgroundColor: '#6D6AAA' };\n                default:\n                  return { backgroundColor: '#0C1010' };\n              }\n            })()}\n          >\n            <div className=\"row\">\n              <div className=\"col-5\">\n                {(() => {\n                  switch (title.toLowerCase()) {\n                    case 'solo' || 'solo-fpp':\n                      return (\n                        <React.Fragment>\n                          Solo\n                          <Icon className=\"fa fa-male\" />\n                        </React.Fragment>\n                      );\n                    case 'duo' || 'duo-fpp':\n                      return (\n                        <React.Fragment>\n                          Duo\n                          <Icon className=\"fa fa-male\" />\n                          <Icon className=\"fa fa-female\" />\n                        </React.Fragment>\n                      );\n                    case 'squad' || 'squad-fpp':\n                      return (\n                        <React.Fragment>\n                          Squad\n                          <Icon className=\"fa fa-male\" />\n                          <Icon className=\"fa fa-female\" />\n                          <Icon className=\"fa fa-male\" />\n                          <Icon className=\"fa fa-female\" />\n                        </React.Fragment>\n                      );\n                    default:\n                      return '';\n                  }\n                })()}\n              </div>\n              <div className=\"col-7\">\n                {this.state.showInfo ? `Rounds Played: ${roundsPlayed}` : ''}\n              </div>\n            </div>\n          </CardHeader>\n          {this.state.showInfo ? (\n            <React.Fragment>\n              <div className=\"row\">\n                <div className=\"col-12\">Main </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Average Damage: </div>\n                <div className=\"col-5\">{averagedamage}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">K/D Ratio: </div>\n                <div className=\"col-5\">{kdratio}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12\">All</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Assists: </div>\n                <div className=\"col-5\">{assists}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Average Damage: </div>\n                <div className=\"col-5\">{averagedamage}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Boosts: </div>\n                <div className=\"col-5\">{boosts}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Headshot Kills: </div>\n                <div className=\"col-5\">{headshotKills}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Heals: </div>\n                <div className=\"col-5\">{heals}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Kills: </div>\n                <div className=\"col-5\">{kills}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Losses: </div>\n                <div className=\"col-5\">{losses}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Longest Kill: </div>\n                <div className=\"col-5\">{longestkill}m</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Longest Time Survived: </div>\n                <div className=\"col-5\">{longestTimeSurvived} min.</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Losses: </div>\n                <div className=\"col-5\">{losses}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Rank Points: </div>\n                <div className=\"col-5\">{rankPoints}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Revives: </div>\n                <div className=\"col-5\">{revives}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Ride Distance: </div>\n                <div className=\"col-5\">{rideDistance}m</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Road Kills: </div>\n                <div className=\"col-5\">{roadKills}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Round Most Kills: </div>\n                <div className=\"col-5\">{roundMostKills}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Rounds Played: </div>\n                <div className=\"col-5\">{roundsPlayed}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Suicides: </div>\n                <div className=\"col-5\">{suicides}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Swim Distance: </div>\n                <div className=\"col-5\">{swimDistance}m</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Team Kills: </div>\n                <div className=\"col-5\">{teamKills}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Top 10: </div>\n                <div className=\"col-5\">{top10}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Vehicle Destroys: </div>\n                <div className=\"col-5\">{vehicleDestroys}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Walked Distance: </div>\n                <div className=\"col-5\">{walkDistance}m</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-7\">Weapons Acquired: </div>\n                <div className=\"col-5\">{weaponsAcquired}</div>\n              </div>\n            </React.Fragment>\n          ) : (\n            <h4>No Games Played</h4>\n          )}\n        </div>\n      </StatCardStyle>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport StatCard from './StatCard';\n\nconst Title = styled.h1`\n  margin-top: 0.5em;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  &:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n  margin-bottom: 3em;\n`;\n\nconst Row = styled.div`\n  margin-top: 1em;\n  margin-bottom: 1em;\n`;\n\nexport default class PUBG extends Component {\n  state = {\n    API_KEY:\n      'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhMDA2NmIzMC1iMjI2LTAxMzYtNjMxYi01MTc5OWNhMWUyYWUiLCJpc3MiOiJnYW1lbG9ja2VyIiwiaWF0IjoxNTM5NTUyNzcwLCJwdWIiOiJibHVlaG9sZSIsInRpdGxlIjoicHViZyIsImFwcCI6ImRhYm9zc3NsYXllcl93In0._h8DRrOqIWpewQ_cWlwzyIKEkUum6ZsljordCEuHzQU',\n    USER_ID: 'account.0fa55cf9d93449968b5a065a29417e72',\n    solo: {},\n    duo: {},\n    squad: {},\n    soloFpp: {},\n    duoFpp: {},\n    squadFpp: {},\n    Status: <div />\n  };\n\n  async componentDidMount() {\n    const SEASON_URL = `https://api.pubg.com/shards/steam/players/${\n      this.state.USER_ID\n    }/seasons/division.bro.official.pc-2018-01`;\n    var config = {\n      headers: {\n        Authorization: 'Bearer ' + this.state.API_KEY,\n        Accept: 'application/vnd.api+json'\n      }\n    };\n\n    const res = await axios\n      .get(SEASON_URL, config)\n      .then(res => {\n        this.setState({\n          solo: res.data.data.attributes.gameModeStats['solo'],\n          duo: res.data.data.attributes.gameModeStats['duo'],\n          squad: res.data.data.attributes.gameModeStats['squad'],\n          soloFpp: res.data.data.attributes.gameModeStats['solo-fpp'],\n          duoFpp: res.data.data.attributes.gameModeStats['duo-fpp'],\n          squadFpp: res.data.data.attributes.gameModeStats['squad-fpp']\n        });\n      })\n      .catch(e => {\n        this.setState({ error: e });\n        if (e.response.status === 429) {\n          this.setState({\n            Status: (\n              <div class=\"alert alert-danger\" role=\"alert\">\n                To Many Requests... Please Try Again Later!\n              </div>\n            )\n          });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <Card className=\"card p-1\">\n        <Title>Player Unknown Battle Grounds</Title>\n        {this.state.Status}\n        <div className=\"container-fluid\">\n          <Row className=\"row \">\n            <div className=\"col-12\">\n              <h5>\n                <span className=\"badge badge-secondary\">Third Person</span>\n              </h5>\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.solo} title=\"Solo\" />\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.duo} title=\"Duo\" />\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.squad} title=\"Squad\" />\n            </div>\n          </Row>\n          <Row className=\"row\">\n            <div className=\"col-12\">\n              <h5>\n                <span className=\"badge badge-secondary\">First Person</span>\n              </h5>\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.soloFpp} title=\"Solo\" />\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.duoFpp} title=\"Duo\" />\n            </div>\n            <div className=\"col-md-4\">\n              <StatCard stats={this.state.squadFpp} title=\"Squad\" />\n            </div>\n          </Row>\n        </div>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark p-0\">\n        <a\n          href=\"#\"\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0 align-items-center\"\n        >\n          DaBossSlayer\n        </a>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport PUBG from './components/games/pubg/PUBG';\nimport Header from './components/layout/Header';\nimport StatCard from './components/games/pubg/StatCard';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"container-fluid\">\n          <PUBG />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}